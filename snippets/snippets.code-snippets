{
  // Java basic template
  "Java Template": {
    "prefix": "java",
    "body": [
      "import java.util.*;",

      "public class ${TM_FILENAME_BASE} {",
      "    public static void main(String[] args) {",
      "        $0",
      "    }",
      "}",
    ],
    "description": "Creates a basic Java class with the main method."
  },

  // Java Scanner template
  "Java Scanner Template": {
    "prefix": "jscan",
    "body": [
      "Scanner scanner = new Scanner(System.in);",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input."
  },
  // Java Scanner integer
  "Java Scanner Integer": {
    "prefix": "jscanint",
    "body": [
      "int ${1:variable} = scanner.nextInt();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer."
  },
  // Java Scanner String
  "Java Scanner String": {
    "prefix": "jscanstr",
    "body": [
      "String ${1:variable} = scanner.nextLine();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String."
  },
  // Java Scanner double
  "Java Scanner Double": {
    "prefix": "jscandouble",
    "body": [
      "double ${1:variable} = scanner.nextDouble();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Double."
  },
  // Java Scanner long
  "Java Scanner Long": {
    "prefix": "jscanlong",
    "body": [
      "long ${1:variable} = scanner.nextLong();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Long."
  },
  // Java Scanner float
  "Java Scanner Float": {
    "prefix": "jscanfloat",
    "body": [
      "float ${1:variable} = scanner.nextFloat();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Float."
  },
  // Java Scanner boolean
  "Java Scanner Boolean": {
    "prefix": "jscanbool",
    "body": [
      "boolean ${1:variable} = scanner.nextBoolean();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Boolean."
  },
  // Java Scanner byte
  "Java Scanner Byte": {
    "prefix": "jscanbyte",
    "body": [
      "byte ${1:variable} = scanner.nextByte();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Byte."
  },
  // Java Scanner short
  "Java Scanner Short": {
    "prefix": "jscanshort",
    "body": [
      "short ${1:variable} = scanner.nextShort();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Short."
  },
  // Java Scanner char
  "Java Scanner Char": {
    "prefix": "jscanchr",
    "body": [
      "char ${1:variable} = scanner.next().charAt(0);",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Char."
  },
  // Java Scanner BigInteger
  "Java Scanner BigInteger": {
    "prefix": "jscanbiginteger",
    "body": [
      "BigInteger ${1:variable} = scanner.nextBigInteger();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input BigInteger."
  },
  // Java Scanner BigDecimal
  "Java Scanner BigDecimal": {
    "prefix": "jscanbigdecimal",
    "body": [
      "BigDecimal ${1:variable} = scanner.nextBigDecimal();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input BigDecimal."
  },
  // Java Scanner nextLine
  "Java Scanner nextLine": {
    "prefix": "jscannextline",
    "body": [
      "scanner.nextLine();",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input nextLine."
  },
  // Java Scanner Integer Array
  "Java Scanner Integer Array using for loop": {
    "prefix": "jscanintarray",
    "body": [
      "int[] ${1:variable} = new int[scanner.nextInt()];",
      "for (int i = 0; i < ${1:variable}.length; i++) {",
      "    ${1:variable}[i] = scanner.nextInt();",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer Array"
  },
  // Java Scanner String Array
  "Java Scanner String Array ": {
    "prefix": "jscansarray",
    "body": [
      "String[] ${1:variable} = new String[scanner.nextInt()];",
      "for (int i = 0; i < ${1:variable}.length; i++) {",
      "    ${1:variable}[i] = scanner.nextLine();",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String Array "
  },
  // java Scanner Integer ArrayList
  "Java Scanner Integer ArrayList": {
    "prefix": "jscanintarraylist",
    "body": [
      "ArrayList<Integer> ${1:variable} = new ArrayList<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer ArrayList"
  },
  // java Scanner String ArrayList
  "Java Scanner String ArrayList": {
    "prefix": "jscanstrarraylist",
    "body": [
      "ArrayList<String> ${1:variable} = new ArrayList<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String ArrayList"
  },
  // java Scanner Integer LinkedList
  "Java Scanner Integer LinkedList": {
    "prefix": "jscanintlinkedlist",
    "body": [
      "LinkedList<Integer> ${1:variable} = new LinkedList<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer LinkedList"
  },
  // java Scanner String LinkedList
  "Java Scanner String LinkedList": {
    "prefix": "jscanstrlinkedlist",
    "body": [
      "LinkedList<String> ${1:variable} = new LinkedList<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String LinkedList"
  },
  // java Scanner Integer Queue
  "Java Scanner Integer Queue": {
    "prefix": "jscanintqueue",
    "body": [
      "Queue<Integer> ${1:variable} = new LinkedList<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer Queue"
  },
  // java Scanner String Queue
  "Java Scanner String Queue": {
    "prefix": "jscanstrqueue",
    "body": [
      "Queue<String> ${1:variable} = new LinkedList<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String Queue"
  },
  // java Scanner Integer Stack
  "Java Scanner Integer Stack": {
    "prefix": "jscanintstack",
    "body": [
      "Stack<Integer> ${1:variable} = new Stack<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer Stack"
  },
  // java Scanner String Stack
  "Java Scanner String Stack": {
    "prefix": "jscanstrstack",
    "body": [
      "Stack<String> ${1:variable} = new Stack<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String Stack"
  },
  // java Scanner Integer Set
  "Java Scanner Integer Set": {
    "prefix": "jscanintset",
    "body": [
      "Set<Integer> ${1:variable} = new HashSet<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer Set"
  },
  // java Scanner String Set
  "Java Scanner String Set": {
    "prefix": "jscanstrset",
    "body": [
      "Set<String> ${1:variable} = new HashSet<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String Set"
  },
  // java Scanner Integer TreeMap
  "Java Scanner Integer TreeMap": {
    "prefix": "jscaninttreemap",
    "body": [
      "TreeMap<Integer, Integer> ${1:variable} = new TreeMap<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.put(scanner.nextInt(), scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer TreeMap"
  },
  // java Scanner String TreeMap
  "Java Scanner String TreeMap": {
    "prefix": "jscanstrtreemap",
    "body": [
      "TreeMap<String, String> ${1:variable} = new TreeMap<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.put(scanner.nextLine(), scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String TreeMap"
  },
  // java Scanner Integer PriorityQueue
  "Java Scanner Integer PriorityQueue": {
    "prefix": "jscanintpq",
    "body": [
      "PriorityQueue<Integer> ${1:variable} = new PriorityQueue<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer PriorityQueue"
  },
  // java Scanner String PriorityQueue
  "Java Scanner String PriorityQueue": {
    "prefix": "jscanstrpq",
    "body": [
      "PriorityQueue<String> ${1:variable} = new PriorityQueue<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String PriorityQueue"
  },
  // java Scanner Integer HashSet
  "Java Scanner Integer HashSet": {
    "prefix": "jscaninthashset",
    "body": [
      "HashSet<Integer> ${1:variable} = new HashSet<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer HashSet"
  },
  // java Scanner String HashSet
  "Java Scanner String HashSet": {
    "prefix": "jscanstrhashset",
    "body": [
      "HashSet<String> ${1:variable} = new HashSet<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String HashSet"
  },
  // java Scanner Integer TreeSet
  "Java Scanner Integer TreeSet": {
    "prefix": "jscaninttreeset",
    "body": [
      "TreeSet<Integer> ${1:variable} = new TreeSet<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer TreeSet"
  },
  // java Scanner String TreeSet
  "Java Scanner String TreeSet": {
    "prefix": "jscanstrtreeset",
    "body": [
      "TreeSet<String> ${1:variable} = new TreeSet<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String TreeSet"
  },
  // java Scanner Integer LinkedHashSet
  "Java Scanner Integer LinkedHashSet": {
    "prefix": "jscanintlinkedhashset",
    "body": [
      "LinkedHashSet<Integer> ${1:variable} = new LinkedHashSet<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextInt());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input Integer LinkedHashSet"
  },
  // java Scanner String LinkedHashSet
  "Java Scanner String LinkedHashSet": {
    "prefix": "jscanstrlinkedhashset",
    "body": [
      "LinkedHashSet<String> ${1:variable} = new LinkedHashSet<>();",
      "for (int i = 0; i < ${1:variable}.size(); i++) {",
      "    ${1:variable}.add(scanner.nextLine());",
      "}",
      "$0",
    ],
    "description": "Creates a Java class with a Scanner object for user input String LinkedHashSet"
  },

  /*----------------------------------------------------------------------------------------------------*/
  /*----------------------------------------------------------------------------------------------------*/
  /*----------------------------------------------------------------------------------------------------*/

  // Java Output template
  "Java Output Template": {
    "prefix": "jout",
    "body": [
      "System.out.println($0);",
    ],
    "description": "Creates a Java output code"
  },
// Output Array 
  "Java ArrayList Output": {
    "prefix": "joutarray",
    "body": [
      "for (int i = 0; i < list.size(); i++) {",
      "    System.out.println(list.get(i));",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },

  // Output Arraylist
  "Java ArrayList Output": {
    "prefix": "joutarraylist",
    "body": [
      "for (int i = 0; i < list.size(); i++) {",
      "    System.out.println(list.get(i));",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Hashmap
  "Java HashMap Output": {
    "prefix": "jouthashmap",
    "body": [
      "for (Map.Entry<String, Integer> entry : map.entrySet()) {",
      "    System.out.println(entry.getKey() + \" \" + entry.getValue());",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Linkedlist
  "Java LinkedList Output": {
    "prefix": "joutlinkedlist",
    "body": [
      "for (int i = 0; i < list.size(); i++) {",
      "    System.out.println(list.get(i));",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Queue
  "Java Queue Output": {
    "prefix": "joutqueue",
    "body": [
      "while (!queue.isEmpty()) {",
      "    int element = queue.poll();",
      "    System.out.println(element);",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Stack
  "Java Stack Output": {
    "prefix": "joutstack",
    "body": [
      "while (!stack.isEmpty()) {",
      "    int element = stack.pop();",
      "    System.out.println(element);",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Set
  "Java Set Output": {
    "prefix": "joutset",
    "body": [
      "for (int element : set) {",
      "    System.out.println(element);",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Treemap
  "Java TreeMap Output": {
    "prefix": "jouttreemap",
    "body": [
      "for (Map.Entry<String, Integer> entry : map.entrySet()) {",
      "    System.out.println(entry.getKey() + \" \" + entry.getValue());",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Priorityqueue
  "Java PriorityQueue Output": {
    "prefix": "joutpq",
    "body": [
      "while (!pq.isEmpty()) {",
      "    int element = pq.poll();",
      "    System.out.println(element);",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Hashset
  "Java HashSet Output": {
    "prefix": "jouthashset",
    "body": [
      "for (int element : set) {",
      "    System.out.println(element);",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Treeset
  "Java TreeSet Output": {
    "prefix": "jouttreeset",
    "body": [
      "for (int element : set) {",
      "    System.out.println(element);",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },
  // Output Linkedhashset
  "Java LinkedHashSet Output": {
    "prefix": "joutlinkedhashset",
    "body": [
      "for (int element : set) {",
      "    System.out.println(element);",
      "}",
      "$0",
    ],
    "description": "Creates a Java output code"
  },

 /*----------------------------------------------------------------------------------------------------*/
 /*----------------------------------------------------------------------------------------------------*/
 /*----------------------------------------------------------------------------------------------------*/

 // Java ArrayList template for Integer
 "Java ArrayList Template Integer": {
  "prefix": "jarraylistint",
  "body": [
    "ArrayList<Integer> list = new ArrayList<>();",
    "$0",
  ],
  "description": "Creates a Java class with an ArrayList Integer."
},
// Java ArrayList template for String
"Java ArrayList Template String": {
  "prefix": "jarrayliststr",
  "body": [
    "ArrayList<String> list = new ArrayList<>();",
    "$0",
  ],
  "description": "Creates a Java class with an ArrayList String."
},
}
  // Java HashMap template Integer
  "Java HashMap Template Integer": {
    "prefix": "jhashmapint",
    "body": [
      "HashMap<Integer, Integer> map = new HashMap<>();",
      "$0"
    ],
    "description": "Creates a Java class with a HashMap."
  },
  // Java HashMap template String
  "Java HashMap Template String": {
    "prefix": "jhashmapstr",
    "body": [
      "HashMap<String, String> map = new HashMap<>();",
      "$0"
    ],
    "description": "Creates a Java class with a HashMap."
  },


  // Java LinkedList template Integer type
  "Java LinkedList Template Integer": {
    "prefix": "jlinkedlistint",
    "body": [
      "LinkedList<Integer> list = new LinkedList<>();",
      "$0",
    ],
    "description": "Creates a Java class with a LinkedList Integer."
  },
  // Java LinkedList template String type
  "Java LinkedList Template String": {
    "prefix": "jlinkedliststr",
    "body": [
      "LinkedList<String> list = new LinkedList<>();",
      "$0",
    ],
    "description": "Creates a Java class with a LinkedList String."
  },


  // Java Queue template using a LinkedList Integer
  "Java Queue Template LinkedList Integer": {
    "prefix": "jqueuelinint",
    "body": [
      "Queue<Integer> queue = new LinkedList<>();",
      "$0",
    ],
    "description": "Creates a Java class with a Queue (using LinkedList)."
  },
  // Java Queue template using a LinkedList String
  "Java Queue Template LinkedList String": {
    "prefix": "jqueuelinstr",
    "body": [
      "Queue<String> queue = new LinkedList<>();",
      "$0",
    ],
    "description": "Creates a Java class with a Queue (using LinkedList)."
  },
  // Java Queue template using a PriorityQueue Integer
  "Java Queue Template PriorityQueue Integer": {
    "prefix": "jqueuepqint",
    "body": [
      "Queue<Integer> queue = new PriorityQueue<>();",
      "$0",
    ],
    "description": "Creates a Java class with a Queue (using PriorityQueue) Integer."
  },
  // Java Queue template using a PriorityQueue String
  "Java Queue Template PriorityQueue String": {
    "prefix": "jqueuepqstr",
    "body": [
      "Queue<String> queue = new PriorityQueue<>();",
      "$0",
    ],
    "description": "Creates a Java class with a Queue (using PriorityQueue) String."
  },

  // Java Stack template for Integer
  "Java Stack Template Integer": {
    "prefix": "jstackint",
    "body": [
      "Stack<Integer> stack = new Stack<>();",
      "$0",
    ],
    "description": "Creates a Java class with a Stack Integer."
  },
  // Java Stack template for String
  "Java Stack Template String": {
    "prefix": "jstackstr",
    "body": [
      "Stack<String> stack = new Stack<>();",
      "$0",
    ],
    "description": "Creates a Java class with a Stack String."
  },

  // Java Set template for Integer
  "Java Set Template Integer": {
    "prefix": "jsetint",
    "body": [
      "HashSet<Integer> set = new HashSet<>();",
      "$0",
    ],
    "description": "Creates a Java class with a HashSet Integer."
  },
  // Java Set template for String
  "Java Set Template String": {
    "prefix": "jsetstr",
    "body": [
      "HashSet<String> set = new HashSet<>();",
      "$0",
    ],
    "description": "Creates a Java class with a HashSet String."
  },

  // Java TreeMap template for Integer
  "Java TreeMap Template Integer": {
    "prefix": "jtreemapint",
    "body": [
      "TreeMap<Integer, Integer> map = new TreeMap<>();",
      "$0",
    ],
    "description": "Creates a Java class with a TreeMap Integer."
  },
  // Java TreeMap template for String
  "Java TreeMap Template String": {
    "prefix": "jtreemapstr",
    "body": [
      "TreeMap<String, String> map = new TreeMap<>();",
      "$0",
    ],
    "description": "Creates a Java class with a TreeMap String."
  },

  // Java PriorityQueue template for Integer
  "Java PriorityQueue Template Integer": {
    "prefix": "jpqueueint",
    "body": [
      "PriorityQueue<Integer> pq = new PriorityQueue<>();",
      "$0",
    ],
    "description": "Creates a Java class with a PriorityQueue Integer."
  }
  // Java PriorityQueue template for String
  "Java PriorityQueue Template String": {
    "prefix": "jpqueuestr",
    "body": [
      "PriorityQueue<String> pq = new PriorityQueue<>();",
      "$0",
    ],
    "description": "Creates a Java class with a PriorityQueue String."
  },

  // Java HashSet template for Integer
  "Java HashSet Template Integer": {
    "prefix": "jhashsetint",
    "body": [
      "HashSet<Integer> set = new HashSet<>();",
      "$0",
    ],
    "description": "Creates a Java class with a HashSet Integer."
  },
  // Java HashSet template for String
  "Java HashSet Template String": {
    "prefix": "jhashsetstr",
    "body": [
      "HashSet<String> set = new HashSet<>();",
      "$0",
    ],
    "description": "Creates a Java class with a HashSet String."
  },


  // Java TreeSet template for Integer
  "Java TreeSet Template Integer": {
    "prefix": "jtreesetint",
    "body": [
      "TreeSet<Integer> set = new TreeSet<>();",
      "$0",
    ],
    "description": "Creates a Java class with a TreeSet Integer."
  },
  // Java TreeSet template for String
  "Java TreeSet Template String": {
    "prefix": "jtreesetstr",
    "body": [
      "TreeSet<String> set = new TreeSet<>();",
      "$0",
    ],
    "description": "Creates a Java class with a TreeSet String."
  },
  // Java LinkedHashSet template for Integer
  "Java LinkedHashSet Template Integer": {
    "prefix": "jlinkedhashsetint",
    "body": [
      "LinkedHashSet<Integer> set = new LinkedHashSet<>();",
      "$0",
    ],
    "description": "Creates a Java class with a LinkedHashSet Integer."
  },
  // Java LinkedHashSet template for String
  "Java LinkedHashSet Template String": {
    "prefix": "jlinkedhashsetstr",
    "body": [
      "LinkedHashSet<String> set = new LinkedHashSet<>();",
      "$0",
    ],
    "description": "Creates a Java class with a LinkedHashSet String."
  },

   /*----------------------------------------------------------------------------------------------------*/
 /*----------------------------------------------------------------------------------------------------*/
 /*----------------------------------------------------------------------------------------------------*/


//   // Iteration methods

//   // Java ArrayList iteration template
//   "Java ArrayList Iteration Template": {
//     "prefix": "jarraylistiter",
//     "body": [
//       "import java.util.ArrayList;",
//       "public class ${TM_FILENAME_BASE} {",
//       "    public static void main(String[] args) {",
//       "        ArrayList<Integer> list = new ArrayList<>();",
//       "        for (int element : list) {",
//       "            $0",
//       "        }",
//       "    }",
//       "}"
//     ],
//     "description": "Creates a Java class with an ArrayList iteration."
//   },

//   // Java HashMap iteration template
//   "Java HashMap Iteration Template": {
//     "prefix": "jhashmapiter",
//     "body": [
//       "import java.util.HashMap;",
//       "public class ${TM_FILENAME_BASE} {",
//       "    public static void main(String[] args) {",
//       "        HashMap<String, Integer> map = new HashMap<>();",
//       "        for (Map.Entry<String, Integer> entry : map.entrySet()) {",
//       "            $0",
//       "        }",
//       "    }",
//       "}"
//     ],
//     "description": "Creates a Java class with a HashMap iteration."
//   },

//   // Java LinkedList iteration template
//   "Java LinkedList Iteration Template": {
//     "prefix": "jlinkedlistiter",
//     "body": [
//       "import java.util.LinkedList;",
//       "public class ${TM_FILENAME_BASE} {",
//       "    public static void main(String[] args) {",
//       "        LinkedList<Integer> list = new LinkedList<>();",
//       "        for (int element : list) {",
//       "            $0",
//       "        }",
//       "    }",
//       "}"
//     ],
//     "description": "Creates a Java class with a LinkedList iteration."
//   },

//   // Java Queue iteration template
//   "Java Queue Iteration Template": {
//     "prefix": "jqueueiter",
//     "body": [
//       "import java.util.Queue;",
//       "import java.util.LinkedList;",
//       "public class ${TM_FILENAME_BASE} {",
//       "    public static void main(String[] args) {",
//       "        Queue<Integer> queue = new LinkedList<>();",
//       "        while (!queue.isEmpty()) {",
//       "            int element = queue.poll();",
//       "            $0",
//       "        }",
//       "    }",
//       "}"
//     ],
//     "description": "Creates a Java class with a Queue iteration."
//   },

//   // Java Stack iteration template
//   "Java Stack Iteration Template": {
//     "prefix": "jstackiter",
//     "body": [
//       "import java.util.Stack;",
//       "public class ${TM_FILENAME_BASE} {",
//       "    public static void main(String[] args) {",
//       "        Stack<Integer> stack = new Stack<>();",
//       "        while (!stack.isEmpty()) {",
//       "            int element = stack.pop();",
//       "            $0",
//       "        }",
//       "    }",
//       "}"
//     ],
//     "description": "Creates a Java class with a Stack iteration."
//   },

//   // Java Set iteration template
//   "Java Set Iteration Template": {
//     "prefix": "jsetiter",
//     "body": [
//       "import java.util.Set;",
//       "import java.util.HashSet;",
//       "public class ${TM_FILENAME_BASE} {",
//       "    public static void main(String[] args) {",
//       "        Set<Integer> set = new HashSet<>();",
//       "        for (int element : set) {",
//       "            $0",
//       "        }",
//       "    }",
//       "}"
//     ],
//     "description": "Creates a Java class with a Set iteration."
//   },

//   // Java TreeMap iteration template
//   "Java TreeMap Iteration Template": {
//     "prefix": "jtreemapiter",
//     "body": [
//       "import java.util.TreeMap;",
//       "public class ${TM_FILENAME_BASE} {",
//       "    public static void main(String[] args) {",
//       "        TreeMap<String, Integer> map = new TreeMap<>();",
//       "        for (Map.Entry<String, Integer> entry : map.entrySet()) {",
//       "            $0",
//       "        }",
//       "    }",
//       "}"
//     ],
//     "description": "Creates a Java class with a TreeMap iteration."
//   },

//   // Java PriorityQueue iteration template
//   "Java PriorityQueue Iteration Template": {
//     "prefix": "jpqueueiter",
//     "body": [
//       "import java.util.PriorityQueue;",
//       "public class ${TM_FILENAME_BASE} {",
//       "    public static void main(String[] args) {",
//       "        PriorityQueue<Integer> pq = new PriorityQueue<>();",
//       "        while (!pq.isEmpty()) {",
//       "            int element = pq.poll();",
//       "            $0",
//       "        }",
//       "    }",
//       "}"
//     ],
//     "description": "Creates a Java class with a PriorityQueue iteration."
//   }
}